/*
 * Copyright Â© 2016 Atomist, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

@description "adds a basic Rug Archive manifest.yml to a project"
@tag "rug"
@tag "atomist"
@tag "yaml"
editor AddBasicRugArchiveManifestYml

@displayName "Project Name"
@description "name of your new project"
@validInput "a valid GitHub repo name containing only alphanumeric, ., -, and _"
@minLength 1
@maxLength 100
param project_name: @project_name

@displayName "Group ID"
@description "Maven group identifier, often used to provide a namespace for your project, e.g., com.pany.team"
@validInput "a valid Maven group ID, which starts with a letter, -, or _ and contains only alphanumeric, -, and _ characters and may having leading period separated identifiers starting with letters or underscores and containing only alphanumeric and _ characters."
@optional
@default "mygroup"
param group_id: @group_id

@displayName "Version"
@description "initial version of the project, e.g., 1.2.3"
@validInput "a valid semantic version, http://semver.org"
@optional
@default "0.1.0"
param version: @semantic_version

let manifest = ".atomist/manifest.yml"

with Project
  do copyEditorBackingFileOrFail manifest

with File f when f.path = manifest
  begin
    do regexpReplace "(?m)^group:.*" { 'group: "' + group_id + '"' }
    do regexpReplace "(?m)^artifact:.*" { 'artifact: "' + project_name + '"' }
    do regexpReplace "(?m)^version:.*" { 'version: "' + version + '"' }
    do regexpReplace '(?m)^dependencies:\s*\n(\s*-.*\n)*' { "dependencies:\n" }
    do regexpReplace '(?m)^extensions:\s*\n(\s*-.*\n)*' { "extensions:\n" }
    do regexpReplace "(?m)^repo:.*\n" ""
    do regexpReplace "(?m)^branch:.*\n" ""
    do regexpReplace "(?m)^sha:.*\n" ""
    do regexpReplace "(?m)^---\n" ""
    do regexpReplace "(?m)^\n" ""
  end
